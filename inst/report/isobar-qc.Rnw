% vim: set expandtab ts=3 sw=3:
\SweaveOpts{eps=FALSE}
\SweaveOpts{strip.white=false}
<<initialization,echo=FALSE,results=hide>>=
options(encoding="UTF-8")  
suppressPackageStartupMessages(library(distr))
suppressPackageStartupMessages(require(ggplot2))
suppressPackageStartupMessages(library(isobar))
pdf.options(pointsize=6)

if (!exists("properties.env",inherits=FALSE)) {
  stop("No properties.env?")
  #properties.env <- load.properties()
}
needed.objects <- c('ibspectra','noise.model','quant.tbl','ratiodistr')
if (!all(needed.objects %in% objects())) {
  message("Initializing environment ...")
  initialize.env(.GlobalEnv,"protein",properties.env)
}

get.property <- function(name) { get(name,properties.env,inherits=FALSE) }
n.tags <- length(reporterTagNames(ibspectra))
@
\documentclass[11pt,oneside,nogin]{article}
\usepackage[margin=2cm]{geometry}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{longtable}
\usepackage[pdftex]{graphicx}
\usepackage{subfigure}
\usepackage{float}
\usepackage{verbatim}
\usepackage{fancyhdr}
\usepackage{tikz}
\setlength{\headheight}{13.6pt}
\pagestyle{fancy}
\lfoot{\today}
\cfoot{\thepage}

<<echo=FALSE,results=tex>>=
cat("\\newcommand{\\analysisname}{",sanitize(get.property('name')),"}\n",sep="")
cat("\\newcommand{\\analysisauthor}{",sanitize(get.property('author')),"}\n",sep="")
cat(sprintf("\\input{%s}\n",system.file("report","report-utils.tex",package="isobar")))
@

\rfoot{Isobar Quality Control Report \analysisname}

%\bibliography{isobar}
%\bibliographystyle{plain}

\usepackage{hyperref}
\hypersetup{
  colorlinks=true,
  pdfauthor=isobar
}

\renewcommand*{\thesubfigure}{}

\title{Isobar QC Report \analysisname\isobarthanks}
\author{\analysisauthor}

\date{\today}
\raggedbottom
\setcounter{tocdepth}{1}

\begin{document}

\maketitle

%\section{IBSpectra object}
%<<ibspectra,echo=FALSE>>=
%ibspectra
%@
\subsection*{Reporter Mass Precision}
Histogram representing the distribution of the delta mass (in \emph{m/z}) for each reporter tag between theoretical and observed mass. Reporter tag ions were extracted from MS2 fragment spectra at $\pm$ \Sexpr{properties.env$fragment.precision/2} $m/z$ around the theoretical masses.

<<fig-reporterMassPrecision,fig=T,echo=F,width=6.5,height=2.5,results=hide>>=
 print(reporterMassPrecision(ibspectra))
@

\subsection*{Reporter Intensities}
Box-plot of the reporter intensities before and after the normalization process. Isobar applies a normalization factor to impose equal median intensity in each channel.

\begin{minipage}[c]{0.70\textwidth}
<<fig-reporterIntensityPlot,fig=T,echo=F,width=4,height=2,results=hide>>=
 print(reporterIntensityPlot(ibspectra) + opts(legend.position="bottom"))
@
\end{minipage}
\hfill
\begin{minipage}[b]{0.25\textwidth}
\vspace{0pt}
<<normalization factors,echo=FALSE,results=tex,strip.white=false>>=
n.factors = ibspectra@log[grep("normalization.multiplicative.factor",rownames(ibspectra@log)),"Message"]
if (length(n.factors) > 0) {
   names(n.factors) <- sub(".* channel ","",names(n.factors))
   cat("\\begin{tabular}{rr}",
       "tag & factor \\\\ \\hline",
       paste(names(n.factors),round(as.numeric(n.factors),5),sep=" & ",collapse="\\\\ \n"),
       "\\end{tabular}",sep="\n")
}
@
\end{minipage}

\subsection*{Ratio distribution}
Distribution of the computed protein ratios (bars) and the probability density function of 
a Cauchy distribution (solid line) fitted as described below.

\begin{minipage}{0.45\textwidth}
<<fig-ratiodistribution,fig=TRUE,echo=FALSE,width=3,height=2>>=

#quant.tbl$ratio <- 10^ quant.tbl$lratio
limits <- seq(from=min(quant.tbl$lratio,na.rm=TRUE),to=max(quant.tbl$lratio,na.rm=TRUE),length.out=1000)
#breaks=c(0.1,0.2,1,5,10)
#breaks <- breaks[log10(breaks) %inrange% range(quant.tbl$lratio)]

g <- ggplot(quant.tbl,aes(x=lratio)) +
  geom_histogram(colour = "darkgreen", fill = "white",
                 aes(y=..density..),alpha=0.8,binwidth=1/20*(max(limits)-min(limits))) +
  geom_rug(alpha=0.1) +
#  scale_x_continuous("Ratio",breaks=log10(breaks),labels=breaks) +
  scale_x_continuous(expression(paste(log[10]," ratio"))) +
  theme_bw(base_size=10) +
  opts(legend.position="none",
       axis.text.x = theme_text(colour="grey50"))

if (!is.null(ratiodistr)) {
  curve.distr <- data.frame(x=limits,y=d(ratiodistr)(limits))
  g <- g + geom_line(data=curve.distr,aes(x=x,y=y),colour="black")
}

print(g)
@
\end{minipage}
\hfill
<<show-ratiodistribution,echo=FALSE,results=tex,strip.white=false>>=
cat("\\begin{minipage}{0.5\\textwidth}\n")
if (!is.null(ratiodistr)) {
  cat("\\begin{verbatim}\n")
  print(ratiodistr)
  cat("\\end{verbatim}\n\n")
  if (!is.null(attr(ratiodistr,"method"))) {
     m <- attr(ratiodistr,"method")
     classLabels <- attr(ratiodistr,"cl")
     t <- table(classLabels)
     tagNames <- attr(ratiodistr,"tagNames")

     cat("Distribution calculated on \\emph{",m,"} ratios",sep="")
     classTxt <- sapply(names(t),function(class) 
                        sprintf("\\emph{%s} (tags %s)",class,
                                paste(tagNames[!is.na(classLabels) & classLabels==class],collapse=", ")))
     if (m == "intraclass") {
        cat(" within classes ",paste(classTxt[names(t)[t>1]],collapse=" and "),".")
     } else {
        cat(" with classes ",paste(classTxt[names(t)],collapse=", "),".")
     }
  }
} else {
   cat("No ratio distribution available.")
}
cat("\\end{minipage}")
if (!is.null(ratiodistr)) {
  probs <- c(0.005,0.01,0.025,0.05,0.95,0.975,0.99,0.995)
  qs <- q(ratiodistr)(probs)
  cat("\n\n \\small",
      "\\begin{tabular}{r",rep("r",length(probs)),"}","\n",
      "probabilities:&",paste(probs*100,"\\%",sep="",collapse="&"),"\\\\ \n",
      "distribution quantiles ($log_{10}$):&",paste(round(qs,2),collapse="&"),"\\\\ \n",
      "(normal scale):&",paste(round(10**qs,3),collapse="&"),"\\\\ \n",
      "\\end{tabular} \\normalsize",
      sep="")
}
@

\subsection*{Ratio-Intensity Plot}
Display of the ratio (\emph{y-axis}) versus the log10 average signal intensity (\emph{x-axis}) for all the reporter ratio combinations. The noise model used by Isobar is indicated as a solid red line.

<<fig-maplot,echo=FALSE,results=hide>>=
ppi <- 300
png("fig_maplot.png",width=6*ppi,height=4*ppi,res=ppi,pointsize=12)
maplot(ibspectra,noise.model=noise.model,bty="l",pairs=properties.env$qc.maplot.pairs)
dev.off()
@
\includegraphics{fig_maplot}

<<fig-ratio-variance,fig=TRUE,echo=FALSE,width=6,height=4,eval=FALSE>>=
#\section{Ratio Variance Plot}
#if (ep("preselected.proteins"))

quant.tbl <- merge(quant.tbl,ddply(quant.tbl,"sign.string",nrow),all.x=TRUE,by="sign.string")
quant.tbl$sign <- paste(quant.tbl$sign.string,": ",quant.tbl$V1,sep="")
#message(paste(unique(quant.tbl$sign),collapse="\n"))

g <- ggplot(quant.tbl,aes(x=lratio,y=sqrt(variance))) +
  geom_point(aes(colour=factor(sign),shape=factor(sign)),alpha=0.8) +
  geom_rug(alpha=0.1) + scale_shape(solid=FALSE) + theme_bw()
print(g)
@

\end{document}
